const library = require('../../common/Genericlibrary.js')
const paymentpo = require('../../pageobjects/multicity/paymentpo.js')

async function CardIssuedOutsideIndia(CardNumber,CardExpiryMonth,CardExpiryYear,CVV,CardHolderName,HouseNumber,ApartmentNumber,Pincode,City,Country)
{
    await pyt.paymentTitle.scrollIntoView()
    await ow.cardPaymentMode.click()
    await browser.pause(3000)
    // await browser.switchToFrame(await ow.cardnumberframe)
    // console.log("switched to frame")
    await pyt.cardNumber.setValue(CardNumber)
    console.log("cardnumber")
    //await browser.switchToFrame(null)
    console.log("back")
    await pyt.cardExpiryMonth.setValue(CardExpiryMonth)
    console.log("month")
    await pyt.cardExpiryYear.setValue(CardExpiryYear)
    console.log("year")
    //await browser.switchToFrame(await ow.cvvframe)
    console.log("cvv frame")
    await pyt.securityCodeCVV.setValue(CVV)
    console.log("cvv")
    //await browser.switchToFrame(null)
    await pyt.cardholderName.setValue(CardHolderName)
    console.log("card name")
    await browser.pause(3000)
    console.log("entered")
    await pyt.houseNumber.setValue(HouseNumber)
    await pyt.apartmentNumber.setValue(ApartmentNumber)
    await pyt.pincode.setValue(Pincode)
    await pyt.city.setValue(City)
    await pyt.country.setValue(Country)
    await pyt.countrySelected.click()
    console.log("a")
    await pyt.state.click()
    console.log('b')
    for (i = 1; i <= await pyt.stateOption.length; i++) {
        console.log("c")
        var states = await pyt.stateOption[i-1].getText()
        //console.log(states)
        await browser.pause(5000)
        if (State === states) {
            await pyt.stateOption[i-1].click()
            break;
        }
    }
    //await ow.state.setValue(State)
    await browser.pause(5000)
    await pyt.termsCondition.click()
    await pyt.pay.click()
    await pyt.confirmpageload.waitForExist({reverse: true,timeout:200000})
}
async function netbanking()
{   await ow.otherpayments.scrollIntoView({block: 'center', inline: 'center' })
    await  ow.otherpayments.click()
                                       await browser.pause(4000)
                                       await pyt.netbanking.click()
                                       await pyt.termsconditions.click()
                                       await pyt.otherpaybtn.click()
                                       await pyt.confirmpageload.waitForDisplayed({reverse:true,timeout:100000})
                                       await browser.pause(3000)
                                       await pyt.IBval.waitForExist()
                                       await pyt.selectbank.click()
                                       await browser.pause(2000)
                                       await pyt.selectbankoption.click()
                                      await pyt.makepayment.click()
                                       await pyt.confirmpageload.waitForExist({ reverse: true,timeout:100000 })
                                       await pyt.selectval.waitForExist()
                                       await pyt.selectdropdown.click()
                                       await pyt.selectdropdownlist[1].click()
                                       await pyt.paymentsubmit.click()
                                       await pyt.confirmpageload.waitForExist({reverse: true,timeout:200000})
                                    
                    
}
async function upi()
{
    await  ow.otherpayments.click()
                    await browser.pause(4000)
                    await pyt.upi.click()
                    await pyt.termsconditions.click()
                    await pyt.otherpaybtn.click()
                    await pyt.confirmpageload.waitForDisplayed({reverse:true,timeout:100000})
                    await browser.pause(3000)
                    await pyt.makepayment.click()
                    await pyt.confirmpageload.waitForExist({ reverse: true,timeout:100000 })
}
async function wallet()
{
    await ow.otherpayments.click()
                    await browser.pause(4000)
                    await pyt.wallet.click()
                    await pyt.termsconditions.click()
                    await pyt.otherpaybtn.click()
                    await pyt.confirmpageload.waitForDisplayed({reverse:true,timeout:100000})
                    await browser.pause(3000)
                    await pyt.makepayment.click()
                    await pyt.confirmpageload.waitForExist({ reverse: true,timeout:100000 })
}
async function rupay(CardNumber,CardExpiryMonth,cardExpiryYear,CVV,CardHolderName)
{
    await ow.otherpayments.click()
                    await browser.pause(4000)
                    await pyt.rupay.click()
                    await pyt.termsconditions.click()
                    await pyt.otherpaybtn.click()
                    await pyt.confirmpageload.waitForDisplayed({reverse:true,timeout:100000})
                    await pyt.rupaycardnumber.setValue(CardNumber)
                    await pyt.rupayexpmonth.setValue(CardExpiryMonth)
                    await pyt.rupayexpyear.setValue(cardExpiryYear)
                    await pyt.rupaycvv.setValue(CVV)
                    await pyt.rupaycardholdername.setValue(CardHolderName)
                    await browser.pause(3000)
                    await pyt.makepayment.click()
                    await pyt.confirmpageload.waitForExist({ reverse: true,timeout:100000 })
}
async function emi(CardNumber,CardExpiryMonth,cardExpiryYear,CVV,CardHolderName)
{
    await ow.otherpayments.click()
                    await browser.pause(4000)
                    await pyt.emi.click()
                    await pyt.termsconditions.click()
                    await pyt.otherpaybtn.click()
                    await pyt.confirmpageload.waitForDisplayed({reverse:true,timeout:100000})
                    await pyt.emioption.click()
                    await $("//select[@id='txtBankIDEMI']//option[text()='Axis Credit Card']").click()
                    await $("//label[@for='3EMI']").click()
                    await pyt.rupaycardnumber.setValue(CardNumber)
                    await pyt.rupayexpmonth.setValue(CardExpiryMonth)
                    await pyt.rupayexpyear.setValue(cardExpiryYear)
                    await pyt.rupaycvv.setValue(CVV)
                    await pyt.rupaycardholdername.setValue(CardHolderName)
                    await browser.pause(3000)
                    await pyt.makepayment.click()
                    await pyt.confirmpageload.waitForExist({ reverse: true,timeout:100000 })
}
async function MCNetBanking()
{
    await library.clickAction(paymentpo.buttonNetbanking)
        await browser.pause(1000)
        await library.pagescrollAction(paymentpo.checkboxTermsCondition)
        await browser.pause(2000)
    
        //await mb.terms.waitForExist()
        await library.clickAction(paymentpo.checkboxTermsCondition)
   
        await browser.pause(2000)
        await library.pagescrollAction(paymentpo.buttonPayContinue)
        await library.pagescrollAction(paymentpo.buttonPayContinue)
        await library.pagescrollAction(paymentpo.buttonPayContinue)
        await browser.pause(3000)
        await library.clickAction(paymentpo.buttonPayContinue)
    await library.waitforexistAction(paymentpo.linkInternebanking)
    
        await browser.pause(3000)
        await library.clickAction(paymentpo.optionBank)
   
        await browser.pause(2000)
    await library.clickAction(paymentpo.optionBankList)
    await library.clickAction(paymentpo.buttonMakePayment)
  
    await library.waitforexistAction(paymentpo.labelOptionVal)
        await library.clickAction(paymentpo.dropdownSelect)
            
        await browser.pause(3000)
        await library.clickAction(paymentpo.dropdownSelectList[1])
        await library.clickAction(paymentpo.buttonPaymentSubmit)

    
    
}
async function MCCreditCard(CardNumber,CardExpMonth,CardExpYear,CVV,CardHolderName,CardEmail,CardMobile,HouseNumber,ApartmentNumber,Pincode,City,Country,State)
{
    await browser.pause(3000)
    await library.clickAction(paymentpo.imgAmex)
    await library.fillTextbox(paymentpo.textboxCardNumber,CardNumber)
    await library.pagetimeout(paymentpo.pageLoader)
    await browser.pause(5000)
    await library.waitforexistAction(paymentpo.textboxCVV)
    await library.fillTextbox(paymentpo.textboxCVV,CVV)
    await browser.pause(10000)
    await library.clickAction(paymentpo.textboxExpMonth)
    await browser.pause(4000)
    await paymentpo.textboxExpMonth.selectByVisibleText(CardExpMonth)
    await browser.pause(2000)
    await library.clickAction(paymentpo.textboxExpYear)
    await browser.pause(2000)
    await paymentpo.textboxExpYear.selectByVisibleText(CardExpYear)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardHolderName,CardHolderName)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardEmail,CardEmail)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardMobile,CardMobile)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardhouseno,HouseNumber)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardAddress,ApartmentNumber)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardPincode,Pincode)
    await browser.pause(2000)
    await library.fillTextbox(paymentpo.textboxCardCity,City)
    await browser.pause(2000)
    await library.clickAction(paymentpo.textboxCardCountry)
    await browser.pause(2000)
    await paymentpo.textboxCardCountry.selectByVisibleText(Country)
    await browser.pause(2000)
    await library.clickAction(paymentpo.textboxCardState)
    await browser.pause(2000)
    await paymentpo.textboxCardState.selectByVisibleText(State)
    await browser.pause(1000)
    await library.pagescrollAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.clickAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(2000)
    
    await library.pagescrollAction(paymentpo.labelPaymentMethod)
    await browser.pause(2000)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonPayContinue)
    await browser.pause(20000)
   // await library.waitforexistAction(paymentpo.lodoCardNetwork)
   var ccc= await $("//iframe[@id='Cardinal-CCA-IFrame']")
   await browser.switchToFrame(ccc);
   var OTP="1234"
   //await browser.sendKeys("1234")
    await library.waitforexistAction(paymentpo.lodoCardNetwork)
    await library.fillTextbox(paymentpo.textboxOTPVerify,OTP)
    await browser.pause(2000)
    await library.clickAction(paymentpo.buttonOTPSubmit)
    await browser.switchToParentFrame()

    //await $("//input[@placeholder=' Enter Code Here']").waitForExist({timeout:30000})
    
    
}
async function MCEmi()
{
    await library.clickAction(paymentpo.imgEMI)
    await browser.pause(1000)
    await library.pagescrollAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
await library.clickAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await pyt.mc_paymentval.scrollIntoView()
    await library.pagescrollAction(paymentpo.labelPaymentMethod)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonPayContinue)
await library.waitforexistAction(paymentpo.tabEmi)
await library.clickAction(paymentpo.optionBankEmi)
}
async function MCUpi()
{
    await library.clickAction(paymentpo.imgUpi)
    await browser.pause(1000)
    await library.pagescrollAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
await library.clickAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await library.pagescrollAction(paymentpo.labelPaymentMethod)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonPayContinue)
    await library.pagetimeout(paymentpo.pageLoader)
    await browser.pause(5000)
    await library.clickAction(paymentpo.buttonMakePayment)
    await library.pagetimeout(paymentpo.pageLoader)
}
async function MCWallet() {
    await library.clickAction(paymentpo.imgWallet)
    await browser.pause(1000)
    await library.pagescrollAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
   await library.clickAction(paymentpo.checkboxTermsCondition)
     await browser.pause(2000)
     await library.pagescrollAction(paymentpo.buttonPayContinue)
     await library.pagescrollAction(paymentpo.labelPaymentMethod)
     await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonPayContinue)
    await library.pagetimeout(paymentpo.pageLoader)
    await browser.pause(5000)
    await library.clickAction(paymentpo.buttonMakePayment)
    await library.pagetimeout(paymentpo.pageLoader)
    
}
async function MCRupay(CardNumber,CardExpMonth,CardExpYear,CVV,CardHolderName) {
   await library.clickAction(paymentpo.imgRupay)
    await browser.pause(1000)
    await library.pagescrollAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.clickAction(paymentpo.checkboxTermsCondition)
    await browser.pause(2000)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await library.pagescrollAction(paymentpo.labelPaymentMethod)
    await library.pagescrollAction(paymentpo.buttonPayContinue)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonPayContinue)
    await library.pagetimeout(paymentpo.pageLoader)
    await library.clickAction(paymentpo.emioption)
    await library.clickAction(paymentpo.optionRupaycredit)
    await library.clickAction(paymentpo.labelEmi)
   await library.fillTextbox(paymentpo.textboxRupayCardNumber,CardNumber)
   await library.fillTextbox(paymentpo.textboxRupayExpMonth,CardExpMonth)
  await library.fillTextbox(paymentpo.textboxRupayExpYear,CardExpYear)
  await library.fillTextbox(paymentpo.textboxRupayCVV,CVV)
  await library.fillTextbox(paymentpo.textboxRupayCardholderName,CardHolderName)
    await browser.pause(3000)
    await library.clickAction(paymentpo.buttonMakePayment)
    await library.pagetimeout(paymentpo.pageLoader)
}
exports.CardIssuedOutsideIndia=CardIssuedOutsideIndia;
exports.netbanking=netbanking;
exports.upi=upi;
exports.wallet=wallet;
exports.rupay=rupay;
exports.emi=emi;
exports.MCNetBanking=MCNetBanking;
exports.MCCreditCard=MCCreditCard;
exports.MCEmi=MCEmi;
exports.MCUpi=MCUpi;
exports.MCWallet=MCWallet;
exports.MCRupay=MCRupay;